# RViz2 Visualization for WSL2 with WSLg/Wayland
#
# Quick Start (from repo root):
#   docker compose -f compose/viz/rviz.yaml up
#
# Requirements:
#   - Windows 11 with WSLg enabled (default on recent builds)
#   - WSL2 Ubuntu distribution
#   - /mnt/wslg socket available
#
# Troubleshooting:
#   - See docs/wsl2-visualization.md
#   - Check WAYLAND_DISPLAY: echo $WAYLAND_DISPLAY
#   - Check XDG_RUNTIME_DIR: echo $XDG_RUNTIME_DIR
#   - Verify socket: ls -la /mnt/wslg/

services:
  rviz:
    image: ghcr.io/pondersome/grunt_base:${ROS_DISTRO:-humble}-dev
    container_name: grunt_rviz_${ROS_DISTRO:-humble}

    # Run as dev user (UID 1000, matches WSL2 user)
    user: dev

    environment:
      # ROS 2 configuration
      - RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}

      # Note: No FastRTPS profile - using default multicast for better discovery
      # bash.yaml uses unicast profile, which may be why tf tree differs
      # If you need unicast, uncomment:
      # - FASTRTPS_DEFAULT_PROFILES_FILE=/dds_config/fastrtps_unicast.xml

      # WSLg display (works with both X11 and Wayland)
      - DISPLAY=${DISPLAY}
      - WAYLAND_DISPLAY=${WAYLAND_DISPLAY}
      - XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR}

      # PulseAudio for audio feedback
      - PULSE_SERVER=${PULSE_SERVER:-/mnt/wslg/PulseServer}

    volumes:
      # WSLg sockets
      - /mnt/wslg:/mnt/wslg:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:ro

      # Development workspace (bind-mounted from WSL2)
      - ~/ros2/${ROS_DISTRO:-humble}/dev_ws:/home/dev/dev_ws:rw

      # Simulation workspace (bind-mounted from WSL2)
      - ~/ros2/${ROS_DISTRO:-humble}/sim_ws:/home/dev/sim_ws:rw

      # DDS configuration (optional, for unicast mode)
      - ../../config/dds:/dds_config:ro

      # RViz config for dev user (optional - can override with custom config)
      # - ../../config/rviz/default.rviz:/home/dev/.rviz2/default.rviz:ro

    # Host networking for ROS 2 DDS discovery
    network_mode: host

    # Launch RViz2 with custom config from dev workspace
    # Uses barney.rviz from your dev workspace
    command: ["rviz2", "-d", "/home/dev/dev_ws/barney.rviz"]

    # No auto-restart - let container stop when RViz closes
    # restart: unless-stopped
